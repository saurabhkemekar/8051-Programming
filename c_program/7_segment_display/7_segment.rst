                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module 7_segment
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _TF2
                                     13 	.globl _EXF2
                                     14 	.globl _RCLK
                                     15 	.globl _TCLK
                                     16 	.globl _EXEN2
                                     17 	.globl _TR2
                                     18 	.globl _C_T2
                                     19 	.globl _CP_RL2
                                     20 	.globl _T2CON_7
                                     21 	.globl _T2CON_6
                                     22 	.globl _T2CON_5
                                     23 	.globl _T2CON_4
                                     24 	.globl _T2CON_3
                                     25 	.globl _T2CON_2
                                     26 	.globl _T2CON_1
                                     27 	.globl _T2CON_0
                                     28 	.globl _PT2
                                     29 	.globl _ET2
                                     30 	.globl _CY
                                     31 	.globl _AC
                                     32 	.globl _F0
                                     33 	.globl _RS1
                                     34 	.globl _RS0
                                     35 	.globl _OV
                                     36 	.globl _F1
                                     37 	.globl _P
                                     38 	.globl _PS
                                     39 	.globl _PT1
                                     40 	.globl _PX1
                                     41 	.globl _PT0
                                     42 	.globl _PX0
                                     43 	.globl _RD
                                     44 	.globl _WR
                                     45 	.globl _T1
                                     46 	.globl _T0
                                     47 	.globl _INT1
                                     48 	.globl _INT0
                                     49 	.globl _TXD
                                     50 	.globl _RXD
                                     51 	.globl _P3_7
                                     52 	.globl _P3_6
                                     53 	.globl _P3_5
                                     54 	.globl _P3_4
                                     55 	.globl _P3_3
                                     56 	.globl _P3_2
                                     57 	.globl _P3_1
                                     58 	.globl _P3_0
                                     59 	.globl _EA
                                     60 	.globl _ES
                                     61 	.globl _ET1
                                     62 	.globl _EX1
                                     63 	.globl _ET0
                                     64 	.globl _EX0
                                     65 	.globl _P2_7
                                     66 	.globl _P2_6
                                     67 	.globl _P2_5
                                     68 	.globl _P2_4
                                     69 	.globl _P2_3
                                     70 	.globl _P2_2
                                     71 	.globl _P2_1
                                     72 	.globl _P2_0
                                     73 	.globl _SM0
                                     74 	.globl _SM1
                                     75 	.globl _SM2
                                     76 	.globl _REN
                                     77 	.globl _TB8
                                     78 	.globl _RB8
                                     79 	.globl _TI
                                     80 	.globl _RI
                                     81 	.globl _P1_7
                                     82 	.globl _P1_6
                                     83 	.globl _P1_5
                                     84 	.globl _P1_4
                                     85 	.globl _P1_3
                                     86 	.globl _P1_2
                                     87 	.globl _P1_1
                                     88 	.globl _P1_0
                                     89 	.globl _TF1
                                     90 	.globl _TR1
                                     91 	.globl _TF0
                                     92 	.globl _TR0
                                     93 	.globl _IE1
                                     94 	.globl _IT1
                                     95 	.globl _IE0
                                     96 	.globl _IT0
                                     97 	.globl _P0_7
                                     98 	.globl _P0_6
                                     99 	.globl _P0_5
                                    100 	.globl _P0_4
                                    101 	.globl _P0_3
                                    102 	.globl _P0_2
                                    103 	.globl _P0_1
                                    104 	.globl _P0_0
                                    105 	.globl _TH2
                                    106 	.globl _TL2
                                    107 	.globl _RCAP2H
                                    108 	.globl _RCAP2L
                                    109 	.globl _T2CON
                                    110 	.globl _B
                                    111 	.globl _ACC
                                    112 	.globl _PSW
                                    113 	.globl _IP
                                    114 	.globl _P3
                                    115 	.globl _IE
                                    116 	.globl _P2
                                    117 	.globl _SBUF
                                    118 	.globl _SCON
                                    119 	.globl _P1
                                    120 	.globl _TH1
                                    121 	.globl _TH0
                                    122 	.globl _TL1
                                    123 	.globl _TL0
                                    124 	.globl _TMOD
                                    125 	.globl _TCON
                                    126 	.globl _PCON
                                    127 	.globl _DPH
                                    128 	.globl _DPL
                                    129 	.globl _SP
                                    130 	.globl _P0
                                    131 	.globl _i
                                    132 	.globl _k
                                    133 	.globl _n
                                    134 ;--------------------------------------------------------
                                    135 ; special function registers
                                    136 ;--------------------------------------------------------
                                    137 	.area RSEG    (ABS,DATA)
      000000                        138 	.org 0x0000
                           000080   139 G$P0$0_0$0 == 0x0080
                           000080   140 _P0	=	0x0080
                           000081   141 G$SP$0_0$0 == 0x0081
                           000081   142 _SP	=	0x0081
                           000082   143 G$DPL$0_0$0 == 0x0082
                           000082   144 _DPL	=	0x0082
                           000083   145 G$DPH$0_0$0 == 0x0083
                           000083   146 _DPH	=	0x0083
                           000087   147 G$PCON$0_0$0 == 0x0087
                           000087   148 _PCON	=	0x0087
                           000088   149 G$TCON$0_0$0 == 0x0088
                           000088   150 _TCON	=	0x0088
                           000089   151 G$TMOD$0_0$0 == 0x0089
                           000089   152 _TMOD	=	0x0089
                           00008A   153 G$TL0$0_0$0 == 0x008a
                           00008A   154 _TL0	=	0x008a
                           00008B   155 G$TL1$0_0$0 == 0x008b
                           00008B   156 _TL1	=	0x008b
                           00008C   157 G$TH0$0_0$0 == 0x008c
                           00008C   158 _TH0	=	0x008c
                           00008D   159 G$TH1$0_0$0 == 0x008d
                           00008D   160 _TH1	=	0x008d
                           000090   161 G$P1$0_0$0 == 0x0090
                           000090   162 _P1	=	0x0090
                           000098   163 G$SCON$0_0$0 == 0x0098
                           000098   164 _SCON	=	0x0098
                           000099   165 G$SBUF$0_0$0 == 0x0099
                           000099   166 _SBUF	=	0x0099
                           0000A0   167 G$P2$0_0$0 == 0x00a0
                           0000A0   168 _P2	=	0x00a0
                           0000A8   169 G$IE$0_0$0 == 0x00a8
                           0000A8   170 _IE	=	0x00a8
                           0000B0   171 G$P3$0_0$0 == 0x00b0
                           0000B0   172 _P3	=	0x00b0
                           0000B8   173 G$IP$0_0$0 == 0x00b8
                           0000B8   174 _IP	=	0x00b8
                           0000D0   175 G$PSW$0_0$0 == 0x00d0
                           0000D0   176 _PSW	=	0x00d0
                           0000E0   177 G$ACC$0_0$0 == 0x00e0
                           0000E0   178 _ACC	=	0x00e0
                           0000F0   179 G$B$0_0$0 == 0x00f0
                           0000F0   180 _B	=	0x00f0
                           0000C8   181 G$T2CON$0_0$0 == 0x00c8
                           0000C8   182 _T2CON	=	0x00c8
                           0000CA   183 G$RCAP2L$0_0$0 == 0x00ca
                           0000CA   184 _RCAP2L	=	0x00ca
                           0000CB   185 G$RCAP2H$0_0$0 == 0x00cb
                           0000CB   186 _RCAP2H	=	0x00cb
                           0000CC   187 G$TL2$0_0$0 == 0x00cc
                           0000CC   188 _TL2	=	0x00cc
                           0000CD   189 G$TH2$0_0$0 == 0x00cd
                           0000CD   190 _TH2	=	0x00cd
                                    191 ;--------------------------------------------------------
                                    192 ; special function bits
                                    193 ;--------------------------------------------------------
                                    194 	.area RSEG    (ABS,DATA)
      000000                        195 	.org 0x0000
                           000080   196 G$P0_0$0_0$0 == 0x0080
                           000080   197 _P0_0	=	0x0080
                           000081   198 G$P0_1$0_0$0 == 0x0081
                           000081   199 _P0_1	=	0x0081
                           000082   200 G$P0_2$0_0$0 == 0x0082
                           000082   201 _P0_2	=	0x0082
                           000083   202 G$P0_3$0_0$0 == 0x0083
                           000083   203 _P0_3	=	0x0083
                           000084   204 G$P0_4$0_0$0 == 0x0084
                           000084   205 _P0_4	=	0x0084
                           000085   206 G$P0_5$0_0$0 == 0x0085
                           000085   207 _P0_5	=	0x0085
                           000086   208 G$P0_6$0_0$0 == 0x0086
                           000086   209 _P0_6	=	0x0086
                           000087   210 G$P0_7$0_0$0 == 0x0087
                           000087   211 _P0_7	=	0x0087
                           000088   212 G$IT0$0_0$0 == 0x0088
                           000088   213 _IT0	=	0x0088
                           000089   214 G$IE0$0_0$0 == 0x0089
                           000089   215 _IE0	=	0x0089
                           00008A   216 G$IT1$0_0$0 == 0x008a
                           00008A   217 _IT1	=	0x008a
                           00008B   218 G$IE1$0_0$0 == 0x008b
                           00008B   219 _IE1	=	0x008b
                           00008C   220 G$TR0$0_0$0 == 0x008c
                           00008C   221 _TR0	=	0x008c
                           00008D   222 G$TF0$0_0$0 == 0x008d
                           00008D   223 _TF0	=	0x008d
                           00008E   224 G$TR1$0_0$0 == 0x008e
                           00008E   225 _TR1	=	0x008e
                           00008F   226 G$TF1$0_0$0 == 0x008f
                           00008F   227 _TF1	=	0x008f
                           000090   228 G$P1_0$0_0$0 == 0x0090
                           000090   229 _P1_0	=	0x0090
                           000091   230 G$P1_1$0_0$0 == 0x0091
                           000091   231 _P1_1	=	0x0091
                           000092   232 G$P1_2$0_0$0 == 0x0092
                           000092   233 _P1_2	=	0x0092
                           000093   234 G$P1_3$0_0$0 == 0x0093
                           000093   235 _P1_3	=	0x0093
                           000094   236 G$P1_4$0_0$0 == 0x0094
                           000094   237 _P1_4	=	0x0094
                           000095   238 G$P1_5$0_0$0 == 0x0095
                           000095   239 _P1_5	=	0x0095
                           000096   240 G$P1_6$0_0$0 == 0x0096
                           000096   241 _P1_6	=	0x0096
                           000097   242 G$P1_7$0_0$0 == 0x0097
                           000097   243 _P1_7	=	0x0097
                           000098   244 G$RI$0_0$0 == 0x0098
                           000098   245 _RI	=	0x0098
                           000099   246 G$TI$0_0$0 == 0x0099
                           000099   247 _TI	=	0x0099
                           00009A   248 G$RB8$0_0$0 == 0x009a
                           00009A   249 _RB8	=	0x009a
                           00009B   250 G$TB8$0_0$0 == 0x009b
                           00009B   251 _TB8	=	0x009b
                           00009C   252 G$REN$0_0$0 == 0x009c
                           00009C   253 _REN	=	0x009c
                           00009D   254 G$SM2$0_0$0 == 0x009d
                           00009D   255 _SM2	=	0x009d
                           00009E   256 G$SM1$0_0$0 == 0x009e
                           00009E   257 _SM1	=	0x009e
                           00009F   258 G$SM0$0_0$0 == 0x009f
                           00009F   259 _SM0	=	0x009f
                           0000A0   260 G$P2_0$0_0$0 == 0x00a0
                           0000A0   261 _P2_0	=	0x00a0
                           0000A1   262 G$P2_1$0_0$0 == 0x00a1
                           0000A1   263 _P2_1	=	0x00a1
                           0000A2   264 G$P2_2$0_0$0 == 0x00a2
                           0000A2   265 _P2_2	=	0x00a2
                           0000A3   266 G$P2_3$0_0$0 == 0x00a3
                           0000A3   267 _P2_3	=	0x00a3
                           0000A4   268 G$P2_4$0_0$0 == 0x00a4
                           0000A4   269 _P2_4	=	0x00a4
                           0000A5   270 G$P2_5$0_0$0 == 0x00a5
                           0000A5   271 _P2_5	=	0x00a5
                           0000A6   272 G$P2_6$0_0$0 == 0x00a6
                           0000A6   273 _P2_6	=	0x00a6
                           0000A7   274 G$P2_7$0_0$0 == 0x00a7
                           0000A7   275 _P2_7	=	0x00a7
                           0000A8   276 G$EX0$0_0$0 == 0x00a8
                           0000A8   277 _EX0	=	0x00a8
                           0000A9   278 G$ET0$0_0$0 == 0x00a9
                           0000A9   279 _ET0	=	0x00a9
                           0000AA   280 G$EX1$0_0$0 == 0x00aa
                           0000AA   281 _EX1	=	0x00aa
                           0000AB   282 G$ET1$0_0$0 == 0x00ab
                           0000AB   283 _ET1	=	0x00ab
                           0000AC   284 G$ES$0_0$0 == 0x00ac
                           0000AC   285 _ES	=	0x00ac
                           0000AF   286 G$EA$0_0$0 == 0x00af
                           0000AF   287 _EA	=	0x00af
                           0000B0   288 G$P3_0$0_0$0 == 0x00b0
                           0000B0   289 _P3_0	=	0x00b0
                           0000B1   290 G$P3_1$0_0$0 == 0x00b1
                           0000B1   291 _P3_1	=	0x00b1
                           0000B2   292 G$P3_2$0_0$0 == 0x00b2
                           0000B2   293 _P3_2	=	0x00b2
                           0000B3   294 G$P3_3$0_0$0 == 0x00b3
                           0000B3   295 _P3_3	=	0x00b3
                           0000B4   296 G$P3_4$0_0$0 == 0x00b4
                           0000B4   297 _P3_4	=	0x00b4
                           0000B5   298 G$P3_5$0_0$0 == 0x00b5
                           0000B5   299 _P3_5	=	0x00b5
                           0000B6   300 G$P3_6$0_0$0 == 0x00b6
                           0000B6   301 _P3_6	=	0x00b6
                           0000B7   302 G$P3_7$0_0$0 == 0x00b7
                           0000B7   303 _P3_7	=	0x00b7
                           0000B0   304 G$RXD$0_0$0 == 0x00b0
                           0000B0   305 _RXD	=	0x00b0
                           0000B1   306 G$TXD$0_0$0 == 0x00b1
                           0000B1   307 _TXD	=	0x00b1
                           0000B2   308 G$INT0$0_0$0 == 0x00b2
                           0000B2   309 _INT0	=	0x00b2
                           0000B3   310 G$INT1$0_0$0 == 0x00b3
                           0000B3   311 _INT1	=	0x00b3
                           0000B4   312 G$T0$0_0$0 == 0x00b4
                           0000B4   313 _T0	=	0x00b4
                           0000B5   314 G$T1$0_0$0 == 0x00b5
                           0000B5   315 _T1	=	0x00b5
                           0000B6   316 G$WR$0_0$0 == 0x00b6
                           0000B6   317 _WR	=	0x00b6
                           0000B7   318 G$RD$0_0$0 == 0x00b7
                           0000B7   319 _RD	=	0x00b7
                           0000B8   320 G$PX0$0_0$0 == 0x00b8
                           0000B8   321 _PX0	=	0x00b8
                           0000B9   322 G$PT0$0_0$0 == 0x00b9
                           0000B9   323 _PT0	=	0x00b9
                           0000BA   324 G$PX1$0_0$0 == 0x00ba
                           0000BA   325 _PX1	=	0x00ba
                           0000BB   326 G$PT1$0_0$0 == 0x00bb
                           0000BB   327 _PT1	=	0x00bb
                           0000BC   328 G$PS$0_0$0 == 0x00bc
                           0000BC   329 _PS	=	0x00bc
                           0000D0   330 G$P$0_0$0 == 0x00d0
                           0000D0   331 _P	=	0x00d0
                           0000D1   332 G$F1$0_0$0 == 0x00d1
                           0000D1   333 _F1	=	0x00d1
                           0000D2   334 G$OV$0_0$0 == 0x00d2
                           0000D2   335 _OV	=	0x00d2
                           0000D3   336 G$RS0$0_0$0 == 0x00d3
                           0000D3   337 _RS0	=	0x00d3
                           0000D4   338 G$RS1$0_0$0 == 0x00d4
                           0000D4   339 _RS1	=	0x00d4
                           0000D5   340 G$F0$0_0$0 == 0x00d5
                           0000D5   341 _F0	=	0x00d5
                           0000D6   342 G$AC$0_0$0 == 0x00d6
                           0000D6   343 _AC	=	0x00d6
                           0000D7   344 G$CY$0_0$0 == 0x00d7
                           0000D7   345 _CY	=	0x00d7
                           0000AD   346 G$ET2$0_0$0 == 0x00ad
                           0000AD   347 _ET2	=	0x00ad
                           0000BD   348 G$PT2$0_0$0 == 0x00bd
                           0000BD   349 _PT2	=	0x00bd
                           0000C8   350 G$T2CON_0$0_0$0 == 0x00c8
                           0000C8   351 _T2CON_0	=	0x00c8
                           0000C9   352 G$T2CON_1$0_0$0 == 0x00c9
                           0000C9   353 _T2CON_1	=	0x00c9
                           0000CA   354 G$T2CON_2$0_0$0 == 0x00ca
                           0000CA   355 _T2CON_2	=	0x00ca
                           0000CB   356 G$T2CON_3$0_0$0 == 0x00cb
                           0000CB   357 _T2CON_3	=	0x00cb
                           0000CC   358 G$T2CON_4$0_0$0 == 0x00cc
                           0000CC   359 _T2CON_4	=	0x00cc
                           0000CD   360 G$T2CON_5$0_0$0 == 0x00cd
                           0000CD   361 _T2CON_5	=	0x00cd
                           0000CE   362 G$T2CON_6$0_0$0 == 0x00ce
                           0000CE   363 _T2CON_6	=	0x00ce
                           0000CF   364 G$T2CON_7$0_0$0 == 0x00cf
                           0000CF   365 _T2CON_7	=	0x00cf
                           0000C8   366 G$CP_RL2$0_0$0 == 0x00c8
                           0000C8   367 _CP_RL2	=	0x00c8
                           0000C9   368 G$C_T2$0_0$0 == 0x00c9
                           0000C9   369 _C_T2	=	0x00c9
                           0000CA   370 G$TR2$0_0$0 == 0x00ca
                           0000CA   371 _TR2	=	0x00ca
                           0000CB   372 G$EXEN2$0_0$0 == 0x00cb
                           0000CB   373 _EXEN2	=	0x00cb
                           0000CC   374 G$TCLK$0_0$0 == 0x00cc
                           0000CC   375 _TCLK	=	0x00cc
                           0000CD   376 G$RCLK$0_0$0 == 0x00cd
                           0000CD   377 _RCLK	=	0x00cd
                           0000CE   378 G$EXF2$0_0$0 == 0x00ce
                           0000CE   379 _EXF2	=	0x00ce
                           0000CF   380 G$TF2$0_0$0 == 0x00cf
                           0000CF   381 _TF2	=	0x00cf
                                    382 ;--------------------------------------------------------
                                    383 ; overlayable register banks
                                    384 ;--------------------------------------------------------
                                    385 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        386 	.ds 8
                                    387 ;--------------------------------------------------------
                                    388 ; internal ram data
                                    389 ;--------------------------------------------------------
                                    390 	.area DSEG    (DATA)
                           000000   391 G$n$0_0$0==.
      000008                        392 _n::
      000008                        393 	.ds 7
                           000007   394 G$k$0_0$0==.
      00000F                        395 _k::
      00000F                        396 	.ds 1
                           000008   397 G$i$0_0$0==.
      000010                        398 _i::
      000010                        399 	.ds 1
                                    400 ;--------------------------------------------------------
                                    401 ; overlayable items in internal ram 
                                    402 ;--------------------------------------------------------
                                    403 ;--------------------------------------------------------
                                    404 ; Stack segment in internal ram 
                                    405 ;--------------------------------------------------------
                                    406 	.area	SSEG
      000011                        407 __start__stack:
      000011                        408 	.ds	1
                                    409 
                                    410 ;--------------------------------------------------------
                                    411 ; indirectly addressable internal ram data
                                    412 ;--------------------------------------------------------
                                    413 	.area ISEG    (DATA)
                                    414 ;--------------------------------------------------------
                                    415 ; absolute internal ram data
                                    416 ;--------------------------------------------------------
                                    417 	.area IABS    (ABS,DATA)
                                    418 	.area IABS    (ABS,DATA)
                                    419 ;--------------------------------------------------------
                                    420 ; bit data
                                    421 ;--------------------------------------------------------
                                    422 	.area BSEG    (BIT)
                                    423 ;--------------------------------------------------------
                                    424 ; paged external ram data
                                    425 ;--------------------------------------------------------
                                    426 	.area PSEG    (PAG,XDATA)
                                    427 ;--------------------------------------------------------
                                    428 ; external ram data
                                    429 ;--------------------------------------------------------
                                    430 	.area XSEG    (XDATA)
                                    431 ;--------------------------------------------------------
                                    432 ; absolute external ram data
                                    433 ;--------------------------------------------------------
                                    434 	.area XABS    (ABS,XDATA)
                                    435 ;--------------------------------------------------------
                                    436 ; external initialized ram data
                                    437 ;--------------------------------------------------------
                                    438 	.area XISEG   (XDATA)
                                    439 	.area HOME    (CODE)
                                    440 	.area GSINIT0 (CODE)
                                    441 	.area GSINIT1 (CODE)
                                    442 	.area GSINIT2 (CODE)
                                    443 	.area GSINIT3 (CODE)
                                    444 	.area GSINIT4 (CODE)
                                    445 	.area GSINIT5 (CODE)
                                    446 	.area GSINIT  (CODE)
                                    447 	.area GSFINAL (CODE)
                                    448 	.area CSEG    (CODE)
                                    449 ;--------------------------------------------------------
                                    450 ; interrupt vector 
                                    451 ;--------------------------------------------------------
                                    452 	.area HOME    (CODE)
      000000                        453 __interrupt_vect:
      000000 02 00 06         [24]  454 	ljmp	__sdcc_gsinit_startup
                                    455 ;--------------------------------------------------------
                                    456 ; global & static initialisations
                                    457 ;--------------------------------------------------------
                                    458 	.area HOME    (CODE)
                                    459 	.area GSINIT  (CODE)
                                    460 	.area GSFINAL (CODE)
                                    461 	.area GSINIT  (CODE)
                                    462 	.globl __sdcc_gsinit_startup
                                    463 	.globl __sdcc_program_startup
                                    464 	.globl __start__stack
                                    465 	.globl __mcs51_genXINIT
                                    466 	.globl __mcs51_genXRAMCLEAR
                                    467 	.globl __mcs51_genRAMCLEAR
                           000000   468 	C$7_segment.c$3$1_0$1 ==.
                                    469 ;	7_segment.c:3: unsigned char n[] = {0xC0,0xF9,0xA4,0xB0,0x9B,0x92,0x82};
      00005F 75 08 C0         [24]  470 	mov	_n,#0xc0
      000062 75 09 F9         [24]  471 	mov	(_n + 0x0001),#0xf9
      000065 75 0A A4         [24]  472 	mov	(_n + 0x0002),#0xa4
      000068 75 0B B0         [24]  473 	mov	(_n + 0x0003),#0xb0
      00006B 75 0C 9B         [24]  474 	mov	(_n + 0x0004),#0x9b
      00006E 75 0D 92         [24]  475 	mov	(_n + 0x0005),#0x92
      000071 75 0E 82         [24]  476 	mov	(_n + 0x0006),#0x82
                           000015   477 	C$7_segment.c$5$1_0$1 ==.
                                    478 ;	7_segment.c:5: unsigned char k = 0;
      000074 75 0F 00         [24]  479 	mov	_k,#0x00
                           000018   480 	C$7_segment.c$6$1_0$1 ==.
                                    481 ;	7_segment.c:6: unsigned char i = 0;
      000077 75 10 00         [24]  482 	mov	_i,#0x00
                                    483 	.area GSFINAL (CODE)
      00007A 02 00 03         [24]  484 	ljmp	__sdcc_program_startup
                                    485 ;--------------------------------------------------------
                                    486 ; Home
                                    487 ;--------------------------------------------------------
                                    488 	.area HOME    (CODE)
                                    489 	.area HOME    (CODE)
      000003                        490 __sdcc_program_startup:
      000003 02 00 7D         [24]  491 	ljmp	_main
                                    492 ;	return from main will return to caller
                                    493 ;--------------------------------------------------------
                                    494 ; code
                                    495 ;--------------------------------------------------------
                                    496 	.area CSEG    (CODE)
                                    497 ;------------------------------------------------------------
                                    498 ;Allocation info for local variables in function 'main'
                                    499 ;------------------------------------------------------------
                           000000   500 	G$main$0$0 ==.
                           000000   501 	C$7_segment.c$7$0_0$1 ==.
                                    502 ;	7_segment.c:7: void main(){
                                    503 ;	-----------------------------------------
                                    504 ;	 function main
                                    505 ;	-----------------------------------------
      00007D                        506 _main:
                           000007   507 	ar7 = 0x07
                           000006   508 	ar6 = 0x06
                           000005   509 	ar5 = 0x05
                           000004   510 	ar4 = 0x04
                           000003   511 	ar3 = 0x03
                           000002   512 	ar2 = 0x02
                           000001   513 	ar1 = 0x01
                           000000   514 	ar0 = 0x00
                           000000   515 	C$7_segment.c$9$1_0$1 ==.
                                    516 ;	7_segment.c:9: while(1){
      00007D                        517 00104$:
                           000000   518 	C$7_segment.c$10$3_0$3 ==.
                                    519 ;	7_segment.c:10: for(k = 0; k<7 ;k++){
      00007D 75 0F 00         [24]  520 	mov	_k,#0x00
      000080                        521 00108$:
                           000003   522 	C$7_segment.c$12$5_0$5 ==.
                                    523 ;	7_segment.c:12: for(i =0; i<200;i++){
      000080 75 10 00         [24]  524 	mov	_i,#0x00
      000083                        525 00106$:
                           000006   526 	C$7_segment.c$13$6_0$6 ==.
                                    527 ;	7_segment.c:13: P1 = n[k];
      000083 E5 0F            [12]  528 	mov	a,_k
      000085 24 08            [12]  529 	add	a,#_n
      000087 F9               [12]  530 	mov	r1,a
      000088 87 90            [24]  531 	mov	_P1,@r1
                           00000D   532 	C$7_segment.c$12$5_0$5 ==.
                                    533 ;	7_segment.c:12: for(i =0; i<200;i++){
      00008A 05 10            [12]  534 	inc	_i
      00008C 74 38            [12]  535 	mov	a,#0x100 - 0xc8
      00008E 25 10            [12]  536 	add	a,_i
      000090 50 F1            [24]  537 	jnc	00106$
                           000015   538 	C$7_segment.c$10$3_0$3 ==.
                                    539 ;	7_segment.c:10: for(k = 0; k<7 ;k++){
      000092 05 0F            [12]  540 	inc	_k
      000094 74 F9            [12]  541 	mov	a,#0x100 - 0x07
      000096 25 0F            [12]  542 	add	a,_k
      000098 50 E6            [24]  543 	jnc	00108$
      00009A 80 E1            [24]  544 	sjmp	00104$
                           00001F   545 	C$7_segment.c$19$1_0$1 ==.
                                    546 ;	7_segment.c:19: }
                           00001F   547 	C$7_segment.c$19$1_0$1 ==.
                           00001F   548 	XG$main$0$0 ==.
      00009C 22               [24]  549 	ret
                                    550 	.area CSEG    (CODE)
                                    551 	.area CONST   (CODE)
                                    552 	.area XINIT   (CODE)
                                    553 	.area CABS    (ABS,CODE)
